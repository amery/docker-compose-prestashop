# vim: set ft=sh ts=4 sw=4 et!:

server_tokens off;

server {
	listen [::]:80 default_server ipv6only=off;
	server_name @@HOSTNAME@@;
	root /var/www;

	client_max_body_size @@PHP_MAX_UPLOAD_MB@@m;
	client_body_buffer_size 128k;

	access_log /var/log/nginx/@@HOSTNAME@@-access.log;
	error_log /var/log/nginx/@@HOSTNAME@@-error.log;

	index index.php;

	location ~ \.php$ {
		# Split $uri to $fastcgi_script_name and $fastcgi_path_info.
		fastcgi_split_path_info ^(.+?\.php)(/.*)$;

		# Ensure that the requested PHP script exists before passing it
		# to the PHP-FPM.
		try_files $fastcgi_script_name =404;

		# Environment variables for PHP.
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $request_filename;

		fastcgi_index index.php;

		fastcgi_keep_conn on;
		fastcgi_read_timeout 30s;
		fastcgi_send_timeout 30s;

		# Uncomment these in case of long loading or 502/504 errors.
		# fastcgi_buffer_size 256k;
		# fastcgi_buffers 256 16k;
		# fastcgi_busy_buffers_size 256k;

		fastcgi_pass app:9000;
	}
>>>>>>> lemp/main
}
<<<<<<< HEAD
    listen [::]:80 default_server ipv6only=off;
    server_name @@HOSTNAME@@;

    client_max_body_size @@PHP_MAX_UPLOAD_MB@@m;
    client_body_buffer_size 128k;

    root @@PS_PROJECT_PATH@@;

    access_log /var/log/nginx/example.com-access.log;
    error_log /var/log/nginx/example.com-error.log;

    index index.php;

    # Redirect 404 errors to PrestaShop.
    error_page 404 /index.php?controller=404;

    # Images.
    rewrite ^/(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$1$2.jpg last;
    rewrite ^/(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$1$2$3.jpg last;
    rewrite ^/(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$1$2$3$4.jpg last;
    rewrite ^/(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$1$2$3$4$5.jpg last;
    rewrite ^/(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$1$2$3$4$5$6.jpg last;
    rewrite ^/(\d)(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$1$2$3$4$5$6$7.jpg last;
    rewrite ^/(\d)(\d)(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$7/$1$2$3$4$5$6$7$8.jpg last;
    rewrite ^/(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)(-[\w-]+)?/.+\.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$7/$8/$1$2$3$4$5$6$7$8$9.jpg last;
    rewrite ^/c/([\w.-]+)/.+\.jpg$ /img/c/$1.jpg last;

    # AlphaImageLoader for IE and FancyBox.
    rewrite ^images_ie/?([^/]+)\.(gif|jpe?g|png)$ js/jquery/plugins/fancybox/images/$1.$2 last;

    # Web service API.
    rewrite ^/api/?(.*)$ /webservice/dispatcher.php?url=$1 last;

    # Installation sandbox.
    rewrite ^(/install(?:-dev)?/sandbox)/.* /$1/test.php last;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    # Admin directory.
    location @@PS_FOLDER_ADMIN@@/ {
        if ( !-e $request_filename ) {
            rewrite ^ @@PS_FOLDER_ADMIN@@/index.php last;
        }
    }

    # .htaccess, .DS_Store, .htpasswd, etc.
    location ~ /\. {
        deny all;
    }

    # Source code directories.
    location ~ ^/(app|bin|cache|classes|config|controllers|docs|localization|override|src|tests|tools|translations|var|vendor)/ {
        deny all;
    }

    # vendor in modules directory.
    location ~ ^/modules/.*/vendor/ {
        deny all;
    }

    # Prevent exposing other sensitive files.
    location ~ \.(log|tpl|twig|sass|yml)$ {
        deny all;
    }

    # Prevent injection of PHP files.
    location /img {
        location ~ \.php$ { deny all; }
    }

    location /upload {
        location ~ \.php$ { deny all; }
    }

    location ~ [^/]\.php(/|$) {
        # Split $uri to $fastcgi_script_name and $fastcgi_path_info.
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;

        # Ensure that the requested PHP script exists before passing it
        # to the PHP-FPM.
        try_files $fastcgi_script_name =404;

        # Environment variables for PHP.
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $request_filename;

        fastcgi_index index.php;

        fastcgi_keep_conn on;
        fastcgi_read_timeout 30s;
        fastcgi_send_timeout 30s;

        # Uncomment these in case of long loading or 502/504 errors.
        # fastcgi_buffer_size 256k;
        # fastcgi_buffers 256 16k;
        # fastcgi_busy_buffers_size 256k;

        fastcgi_pass prestashop:9000;
    }
=======
